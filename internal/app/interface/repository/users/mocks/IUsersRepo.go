// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import (
	domain "github.com/William9923/bulk-upload-poc/internal/app/domain"
	mock "github.com/stretchr/testify/mock"
)

// IUsersRepo is an autogenerated mock type for the IUsersRepo type
type IUsersRepo struct {
	mock.Mock
}

// GetUser provides a mock function with given fields: id
func (_m *IUsersRepo) GetUser(id int64) (domain.User, error) {
	ret := _m.Called(id)

	var r0 domain.User
	if rf, ok := ret.Get(0).(func(int64) domain.User); ok {
		r0 = rf(id)
	} else {
		r0 = ret.Get(0).(domain.User)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(int64) error); ok {
		r1 = rf(id)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetUsers provides a mock function with given fields:
func (_m *IUsersRepo) GetUsers() ([]domain.User, error) {
	ret := _m.Called()

	var r0 []domain.User
	if rf, ok := ret.Get(0).(func() []domain.User); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]domain.User)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UpdateUsers provides a mock function with given fields: users
func (_m *IUsersRepo) UpdateUsers(users []domain.User) []error {
	ret := _m.Called(users)

	var r0 []error
	if rf, ok := ret.Get(0).(func([]domain.User) []error); ok {
		r0 = rf(users)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]error)
		}
	}

	return r0
}
